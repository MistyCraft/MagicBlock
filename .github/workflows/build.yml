name: Build and Release Plugin

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read_version.outputs.version }}
    steps:
    - uses: actions/checkout@v4

    - name: Prepare Build
      run: |
        if [ -f gradle.properties ]; then
          sed -i '/org.gradle.java.home/d' gradle.properties
        fi
        chmod +x gradlew

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: List Files
      run: |
        ls -l

    - name: Convert Line Endings
      run: |
        sudo apt-get install -y dos2unix
        dos2unix build.gradle

    - name: Read Version
      id: read_version
      run: |
        # 更强健的版本提取逻辑，支持四位版本号
        VERSION=$(grep "^version" build.gradle | sed -E "s/^version\s*['\"]?([^'\"]+)['\"]?.*$/\1/" | xargs)

        # 如果第一种方法失败，尝试其他方法
        if [ -z "$VERSION" ] || [ "$VERSION" = "version" ]; then
          VERSION=$(grep "^version" build.gradle | cut -d"'" -f2)
        fi

        # 再次检查，使用 awk 作为备用方法
        if [ -z "$VERSION" ] || [ "$VERSION" = "version" ]; then
          VERSION=$(awk -F"'" '/^version/ {print $2}' build.gradle)
        fi

        # 最终检查
        if [ -z "$VERSION" ] || [ "$VERSION" = "version" ]; then
          echo "Version not found in build.gradle. Exiting."
          echo "Debug: build.gradle content:"
          cat build.gradle | head -10
          exit 1
        fi

        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected Version: $VERSION"
        echo "Version validation: Four-part version support enabled"

        # 验证版本格式
        if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+(\.[0-9]+)?$ ]]; then
          echo "✅ Version format validation passed: $VERSION"
          if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "🎯 Four-part version detected: $VERSION"
          else
            echo "📝 Three-part version detected: $VERSION"
          fi
        else
          echo "❌ Invalid version format: $VERSION"
          exit 1
        fi

    - name: Build with Gradle
      run: ./gradlew clean build --info --stacktrace
      env:
        GRADLE_OPTS: "-Dorg.gradle.logging.level=info"
        VERSION: ${{ steps.read_version.outputs.version }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: plugin-jar
        path: ${{ github.workspace }}/build/libs/MagicBlock-${{ steps.read_version.outputs.version }}.jar 
        retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: plugin-jar
        path: .

    - name: List Downloaded Artifacts
      run: ls -l

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.build.outputs.version }}
        name: Release ${{ needs.build.outputs.version }}
        draft: false
        prerelease: false
        files: MagicBlock-${{ needs.build.outputs.version }}.jar
        body: |
          ## MagicBlock v${{ needs.build.outputs.version }}

          ### 📦 下载
          - **插件文件**: MagicBlock-${{ needs.build.outputs.version }}.jar

          ### 🔧 安装说明
          1. 下载 JAR 文件
          2. 将文件放入服务器的 `plugins` 文件夹
          3. 重启服务器或使用 `/reload` 命令

          ### 📋 版本信息
          - **版本号**: ${{ needs.build.outputs.version }}
          - **支持版本**: Minecraft 1.18.2+
          - **Java版本**: 17+

          ### 🆕 更新内容
          请查看 [更新日志](https://github.com/${{ github.repository }}/commits/main) 了解详细更改。